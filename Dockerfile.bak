# Build stage
FROM rust:1.81-slim-bullseye as builder

WORKDIR /usr/src/agoranet

# Install dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends pkg-config libssl-dev curl && \
    apt-get install -y pkg-config libssl-dev  curl && \&& \ \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create blank project
RUN USER=root cargo new --bin agoranet

# Copy manifests
COPY Cargo.lock Cargo.toml ./

# Copy source code
COPY src src/
COPY migrations migrations/

# Build the application with release profile
RUN cargo build --release

# Runtime stage
FROM debian:bullseye-slim

ARG APP=/usr/local/bin/agoranet

RUN apt-get update && \
    apt-get install -y --no-install-recommends pkg-config libssl-dev curl && \
    apt-get install -y ca-certificates tzdata libssl1.1 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy the binary from builder
COPY --from=builder /usr/src/agoranet/target/release/agoranet ${APP}

# Copy migrations for sqlx
COPY --from=builder /usr/src/agoranet/migrations /usr/local/bin/migrations

# Set the working directory
WORKDIR /usr/local/bin

# Create a non-root user and switch to it
RUN groupadd -r agoranet && useradd -r -g agoranet agoranet
RUN chown -R agoranet:agoranet ${APP} /usr/local/bin/migrations
USER agoranet

# Set environment variables
ENV TZ=Etc/UTC \
    RUST_LOG=info

# Expose the API port
EXPOSE 3001

# Command to run the application
CMD ["agoranet"] 